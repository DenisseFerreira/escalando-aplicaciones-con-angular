#!/usr/bin/env bash

commit_message_pattern='Merge[[:space:]]+pull[[:space:]]+request[[:space:]]+#[0-9]+[[:space:]]+from[[:space:]]+([[:alpha:]]+)\/([[:punct:][:alnum:]]+)'
last_commit_message=$(git log --oneline --merges -1)

[[ "$last_commit_message" =~ $commit_message_pattern ]]

contributorUsername=${BASH_REMATCH[1]}
contributorBranchName=${BASH_REMATCH[2]}

echo "=============================================================="
echo "Regex input: ${BASH_REMATCH[0]}"
echo "Contributor username: $contributorUsername"
echo "Merged branch: $contributorBranchName"
echo "=============================================================="

branch_name_pattern='([[:alpha:]]+)\/[[:punct:][:alnum:]]+'

[[ "$contributorBranchName" =~ $branch_name_pattern ]]

branch_name_prefix=${BASH_REMATCH[1]}

echo "=============================================================="
echo "Regex input: ${BASH_REMATCH[0]}"
echo "Branch name prefix: $branch_name_prefix"
echo "=============================================================="

not_semver_prefix_pattern='^docs|ci|chore|test$'
patch_semver_prefix_pattern='^bugfix|fix|greenkeeper$'
minor_semver_prefix_pattern='^feature$'

# TODO: check if a major version was changed in package.json file and skip this process
if [[ "$branch_name_prefix" =~ $not_semver_prefix_pattern ]]; then
    echo "not auto semver for branch type: $branch_name_prefix"
elif [[ "$branch_name_prefix" =~ $patch_semver_prefix_pattern ]]; then
    echo "auto semver patch for branch $branch_name_prefix"
    npm version patch
elif [[ "$branch_name_prefix" =~ $minor_semver_prefix_pattern ]]; then
    echo "auto semver feature for branch $branch_name_prefix"
    npm version minor
else 
    echo "ERROR: your branch called '$branch_name_prefix' does not follow the branch name policies."
    echo "See more information in CONTRIBUTING.md https://www.github.com/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME/blob/master/CONTRIBUTING.md"
fi
