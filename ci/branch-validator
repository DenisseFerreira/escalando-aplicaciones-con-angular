#!/usr/bin/env bash

function check_branch_name_validity {
    branch_name=$1
    branch_name_prefix_pattern='([[:alpha:]]+)\/[[:punct:][:alnum:]]+'
    not_semver_prefix_pattern='^docs|ci|chore|test$'
    patch_semver_prefix_pattern='^bugfix|fix|greenkeeper$'
    minor_semver_prefix_pattern='^feature$'

    [[ "$branch_name" =~ $branch_name_prefix_pattern ]]

    branch_name_prefix=${BASH_REMATCH[1]}

    echo "=============================================================="
    echo "Regex input: ${BASH_REMATCH[0]}"
    echo "Branch name prefix: $branch_name_prefix"
    echo "=============================================================="

    if [[ $branch_name_prefix =~ $not_semver_prefix_pattern ]] || [[ $branch_name_prefix =~ $patch_semver_prefix_pattern ]] || [[ $branch_name_prefix =~ $minor_semver_prefix_pattern ]]; then
        echo "OK! your branch called '$branch_name' use the right convention names"
    else    
        echo "ERROR: your branch called '$branch_name' does not follow the branch name policies."
    fi

    echo "See more information in CONTRIBUTING.md https://www.github.com/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME/blob/master/CONTRIBUTING.md"
}

if [[ "$CIRCLE_BRANCH" == "master" ]]; then
    merge_commit_message_pattern='Merge[[:space:]]+pull[[:space:]]+request[[:space:]]+#[0-9]+[[:space:]]+from[[:space:]]+([[:alpha:]]+)\/([[:punct:][:alnum:]]+)'
    last_commit_message=$(git log --oneline --merges -1)

    [[ "$last_commit_message" =~ $merge_commit_message_pattern ]]

    contributorUsername=${BASH_REMATCH[1]}
    contributorBranchName=${BASH_REMATCH[2]}

    echo "=============================================================="
    echo "Regex input: ${BASH_REMATCH[0]}"
    echo "Contributor username: $contributorUsername"
    echo "Merged branch: $contributorBranchName"
    echo "=============================================================="

    check_branch_name_validity $contributorBranchName
else
    check_branch_name_validity $CIRCLE_BRANCH
fi
