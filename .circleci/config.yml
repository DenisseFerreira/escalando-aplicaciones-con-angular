version: 2.1
orbs:
  codecov: codecov/codecov@1.0.5
  jq: circleci/jq@1.9.0
aliases:
  restore_npm_cache: &restore_npm_cache
    restore_cache:
      name: Restore Npm Package Cache
      keys:
        - v1-dependencies-{{ checksum "package.json" }}
        - v1-dependencies-
  save_npm_cache: &save_npm_cache
    save_cache:
      name: Save NPM modules cache
      paths:
        - ~/.npm
        - ~/.cache
      key: v1-dependencies-{{ checksum "package.json" }}

  store_dist: &store_dist
    save_cache:
      name: Save dist folder
      paths:
        - dist
      key: v1-dist-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
  
  restore_dist: &restore_dist
    restore_cache:
      name: Restore built dist folder
      keys:
        - v1-dist-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}

  install_node_modules: &install_node_modules
    run:
      name: Install local dependencies
      command: npm ci
      when: always

  show_current_branch: &show_current_branch
    run:
      name: Show current branch
      command: echo ${CIRCLE_BRANCH}

  show_bash_version: &show_bash_version
    run:
      name: Show current branch
      command: echo ${BASH_VERSION}
jobs:
  branch-validator:
    machine: true
    working_directory: ~/repo
    steps:
      - checkout
      - <<: *show_bash_version
      - <<: *show_current_branch
      - run:
          name: Check Format name of incoming branch
          command: ./ci/branch-validator
  linter:
    docker:
      - image: circleci/node:10
    working_directory: ~/repo
    steps:
      - checkout
      - <<: *show_current_branch
      - <<: *restore_npm_cache
      - <<: *install_node_modules
      - <<: *save_npm_cache
      - run:
          name: Linting
          command: npm run lint
  unit-tests:
    docker:
      - image: circleci/node:10
    working_directory: ~/repo
    steps:
      - checkout
      - <<: *show_current_branch
      - <<: *restore_npm_cache
      - <<: *install_node_modules
      - <<: *save_npm_cache
      - run:
          name: Running unit tests
          command: ./ci/unit-tests
      - codecov/upload:
          file: ./coverage/lcov.info
      - store_artifacts:
          path: ./test-results/junit
      - store_artifacts:
          path: ./coverage
      - store_test_results:
          path: ./test-results
  e2e:
    docker:
      - image: cypress/base:10
        environment:
          ## this enables colors in the output
          TERM: xterm
    working_directory: ~/repo
    steps:
      - checkout
      - <<: *show_current_branch
      - <<: *restore_npm_cache
      - <<: *install_node_modules
      - <<: *save_npm_cache
      - run:
          name: Running e2e tests
          command: bash ./ci/e2e
  build:
    docker:
      - image: circleci/node:10
    working_directory: ~/repo
    steps:
      - checkout
      - <<: *show_current_branch
      - <<: *restore_npm_cache
      - <<: *install_node_modules
      - <<: *save_npm_cache
      - run:
          name: Building artifact using ng build
          command: ./ci/build
      - <<: *store_dist
  staging-deploy:
    machine: true
    working_directory: ~/repo
    steps:
      - checkout
      - <<: *show_current_branch
      - <<: *restore_dist
      - run:
          name: Deploy Docker Image
          command: ./ci/deploy
      - run:
          name: Deploy to Heroku
          command: ./ci/release
  smoke-test-staging:
    docker:
      - image: circleci/node:10
    working_directory: ~/repo
    steps:
      - checkout
      - <<: *show_current_branch
      - <<: *restore_npm_cache
      - <<: *install_node_modules
      - <<: *save_npm_cache
      - run:
          name: Running Smoke test
          command: ./ci/smoke-test
  production-deploy:
    machine: true
    working_directory: ~/repo
    steps:
      - checkout
      - <<: *show_current_branch
      - <<: *restore_dist
      - run:
          name: Deploy Docker Image
          command: ./ci/deploy --prod
      - run:
          name: Deploy to Heroku
          command: ./ci/release --prod
  update-repository:
    docker:
      - image: circleci/node:10
    working_directory: ~/repo
    steps:
      - add_ssh_keys:
          fingerprints:
            - "a7:af:f2:47:72:a1:69:7d:d2:9f:fe:c1:81:98:41:88"
      - checkout
      - <<: *show_current_branch
      - <<: *restore_npm_cache
      - <<: *install_node_modules
      - <<: *save_npm_cache
      - run: |
          git config credential.helper 'cache --timeout=120'
          git config user.email ngChile@circleci
          git config user.name "ngChile Circle Ci Deployment Bot"
      - run:
          name: Updating contributors list
          command: ./ci/update-contributors
      - run:
          name: Auto semantic version
          command: ./ci/autosemver
      - run: |
          git --no-pager diff
          git add README.md package.json
          git diff-index --quiet HEAD || git commit -m "[skip ci] Update Repository with new version (if was changed) and contributors list."
          git push origin ${CIRCLE_BRANCH}
          git push --follow-tags
workflows:
  version: 2
  angular-chile-pipeline:
    jobs:
      - branch-validator
      - linter:
          requires:
            - branch-validator
      - unit-tests:
          requires:
            - branch-validator
      - e2e:
          requires:
            - branch-validator
      - build:
          requires:
            - linter
            - unit-tests
            - e2e
      - staging-deploy:
          requires:
            - build
      - smoke-test-staging:
          requires:
            - staging-deploy
      - production-approval:
          type: approval
          requires:
            - smoke-test-staging
          filters:
            branches:
              only:
                - master
      - production-deploy:
          requires:
            - production-approval
          filters:
            branches:
              only:
                - master
      - update-repository:
          requires:
            - production-deploy
          filters:
            branches:
              only:
                - master
